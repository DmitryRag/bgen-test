{"version":3,"sources":["components/AdForm.js","components/Advertisement.js","components/App.js","reportWebVitals.js","index.js"],"names":["AdForm","props","useState","titleInput","setTitleInput","textInput","setTextInput","numberInput","setNumberInput","cityInput","setCityInput","handleSubmit","e","preventDefault","addAdvertisements","handleKeyPress","key","className","style","width","aria-label","onSubmit","for","id","rows","maxLength","value","onChange","currentTarget","onKeyDown","placeholder","required","type","format","mask","Advertisement","show","setShow","onClick","removeAdvertisements","advertisements","title","text","number","city","App","setAdvertisements","filter","buttonCondition","newItem","Math","random","toString","substr","map","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.df0b2107.chunk.js","sourcesContent":["import React from 'react'\nimport { useState } from 'react'\nimport NumberFormat from 'react-number-format'\n\nfunction AdForm(props) {\n    const [titleInput, setTitleInput] = useState('')\n    const [textInput, setTextInput] = useState('')\n    const [numberInput, setNumberInput] = useState('')\n    const [cityInput, setCityInput] = useState('')\n\n    function hadleTitleChange(e) {\n        setTitleInput(e.currentTarget.value)\n    }\n\n    function hadleTextChange(e) {\n        setTextInput(e.currentTarget.value)\n    }\n\n    function hadleNumberChange(e) {\n        setNumberInput(e.currentTarget.value)\n    }\n\n    function hadleCityChange(e) {\n        setCityInput(e.currentTarget.value)\n    }\n\n    function handleSubmit(e) {\n        e.preventDefault()\n\n        props.addAdvertisements(titleInput, textInput, numberInput, cityInput)\n        setTitleInput('')\n        setTextInput('')\n        setNumberInput('')\n        setCityInput('')\n    }\n\n    function handleKeyPress(e) {\n        if(e.key === 'Enter') {\n            handleSubmit(e)\n        }\n    }\n\n    return(\n        <div className='add-form'>\n            <div className='window' style={{ width: 430 }}>\n                <div className='title-bar inactive'>\n                    <div className='title-bar-text'>Заполните объявление</div>\n                    <div className='title-bar-controls'>\n                        <button aria-label='Minimize'></button>\n                        <button aria-label='Maximize'></button>\n                        <button aria-label='Close'></button>\n                    </div>\n                </div>\n                <form\n                className='window-body'\n                onSubmit={handleSubmit}\n                >\n                    <div className='field-row-stacked' style={{ width: 350 }}>\n                        <label for='text20'>Заголовок :</label>\n                        <textarea\n                        id='text20'\n                        rows='2'\n                        maxLength={140}\n                        value={titleInput}\n                        onChange={hadleTitleChange}\n                        onKeyDown={handleKeyPress}\n                        placeholder='Заполните заголовок...'\n                        required\n                        />\n                    </div>\n                    <div className='field-row-stacked' style={{ width: 350 }}>\n                        <label for='text20'>Текст объявления:</label>\n                        <textarea\n                        id='text20'\n                        rows='4'\n                        maxLength={300}\n                        value={textInput}\n                        onChange={hadleTextChange}\n                        onKeyDown={handleKeyPress}\n                        placeholder='Заполните объявление...'\n                        ></textarea>\n                    </div>\n                    <div className='field-row-stacked' style={{ width: 150 }}>\n                        <label for='text18'>Мобильный телефон:</label>\n                        <NumberFormat\n                        id='text18'\n                        type='tel'\n                        format='+7 (###) ###-##-##' \n                        mask='_'\n                        value={numberInput}\n                        onChange={hadleNumberChange}\n                        onKeyDown={handleKeyPress}\n                        placeholder='+7 (___) ___-__-__'\n                        required\n                        />\n                    </div>\n                    <p className='text'>Выберете город:</p>\n                    <select\n                    className='select-city'\n                    value={cityInput}\n                    onChange={hadleCityChange}\n                    >\n                        <option value=''></option>\n                        <option value='Москва'>Москва</option>\n                        <option value='Санкт-Петербур'>Санкт-Петербург</option>\n                        <option value='Казань'>Казань</option>\n                        <option value='Нижний Новгород'>Нижний Новгород</option>\n                    </select>\n                    <div>\n                        <button className='button-send' type='submit'>\n                        Разместить объявление\n                        </button>\n                    </div>\n                </form>\n            </div>\n        </div>\n    )\n}\n\nexport default AdForm","import { useState } from 'react'\n\nfunction Advertisement(props) {\n    const [show, setShow] = useState(true)\n\n    return(\n        <div className='window' style={{ width: 380 }} \n        key={props.advertisements.id}>\n            <div className='title-bar'>\n                <div className='title-bar-text'>Объявление:</div>\n                    <div className='title-bar-controls'>\n                        <button aria-label='Minimize' onClick={() => setShow(false)}></button>\n                        <button aria-label='Maximize' onClick={() => setShow(true)}></button>\n                        <button aria-label='Close' onClick={() => props.removeAdvertisements(props.advertisements.id)}></button>\n                    </div>\n                </div>\n        {show?\n            <div className='window-body'>\n                <div className='field-row-stacked' style={{ width: 350 }}>\n                    <h8>{props.advertisements.title}</h8>\n                    <h8>{props.advertisements.text}</h8>\n                    <h8>{props.advertisements.number}</h8>\n                    <h8>{props.advertisements.city}</h8>\n                </div>\n            </div> \n        :null}\n        </div>\n    )\n}\n\nexport default Advertisement\n","import React from 'react'\nimport AdForm from './AdForm'\nimport Advertisement from './Advertisement'\nimport { useState } from 'react'\n\nfunction App() {\n    const [advertisements, setAdvertisements] = useState([])\n\n    function addAdvertisements(titleInput, textInput, numberInput, cityInput, buttonCondition) {\n        if(titleInput) {\n            const newItem = {\n                id: Math.random().toString(36).substr(2,9),\n                title: titleInput,\n                text: textInput,\n                number: numberInput,\n                city: cityInput,\n            }\n            setAdvertisements([...advertisements, newItem])\n        }\n    }\n\n    function removeAdvertisements(id) {\n        setAdvertisements([...advertisements.filter((advertisements) => advertisements.id !== id)])\n    }\n\n    return(\n        <div className='page'>\n            <AdForm\n            addAdvertisements={addAdvertisements}\n            advertisements={advertisements}\n            />\n            <ul className='advertisements-list'>\n            {advertisements.map((advertisements) => {\n                return (\n                    <Advertisement\n                        advertisements={advertisements}\n                        key={advertisements.id}\n                        removeAdvertisements={removeAdvertisements}\n                    /> \n                )    \n            })}\n            </ul>\n        </div>\n    )\n}\n\nexport default App","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry)\n      getFID(onPerfEntry)\n      getFCP(onPerfEntry)\n      getLCP(onPerfEntry)\n      getTTFB(onPerfEntry)\n    })\n  }\n}\n\nexport default reportWebVitals\n","import React from 'react'\nimport ReactDOM from 'react-dom'\nimport './index.css'\nimport App from './components/App'\nimport reportWebVitals from './reportWebVitals'\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\nreportWebVitals()\n"],"sourceRoot":""}